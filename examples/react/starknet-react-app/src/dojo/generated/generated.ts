/* Autogenerated file. Do not edit manually. */

import { Account, AccountInterface, InvocationsDetails } from "starknet";
import { DojoProvider } from "@dojoengine/core";
import { Direction } from "../../utils";

export type IWorld = Awaited<ReturnType<typeof setupWorld>>;

export interface MoveProps {
    account: Account | AccountInterface;
    direction: Direction;
    transactionDetails?: InvocationsDetails;
}

export async function setupWorld(provider: DojoProvider) {
    function actions() {
        const contract_name = "actions";

        const spawn = async ({ account }: { account: AccountInterface }) => {
            try {
                return await provider.execute(
                    account,
                    contract_name,
                    "spawn",
                    [],
                    {
                        maxFee: "10000000000000000", // 0.01 ETH
                    }
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        const move = async ({ account, direction }: MoveProps) => {
            try {
                return await provider.execute(
                    account,
                    contract_name,
                    "move",
                    [direction],
                    {
                        maxFee: "10000000000000000", // 0.01 ETH
                    }
                );
            } catch (error) {
                console.error("Error executing move:", error);
                throw error;
            }
        };
        return { spawn, move };
    }
    return {
        actions: actions(),
    };
}
